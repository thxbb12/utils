#!/bin/bash

if [ $# -ne 2 ]; then
	echo "Convert a video file to a H.264 compressed mp4 file"
	echo "Usage: video2h264 QUALITY FILE"
	echo "The generated output file has the same name as the input, except"
	echo "the extension is mp4 and the filename is postfixed with -h264."
	echo "The video codec uses a variable bitrate and the audio is AAC."
	echo "QUALITY must be between 0 (best) and 51 (worst)."
	echo "A quality of 25 seems to be a good default."
	echo "Requires ffmpeg"
	exit 1
fi

quality=$1
if [ $quality -gt 51 ] || [ $quality -lt 0 ]; then
	echo "Invalid quality value! (must be between 0 and 51)"
	exit 1
fi

# To avoid saturating the system, leave 1 physical CPU for other things
cores=`lscpu|grep "^CPU(s):"|awk -F":" '{print $2}'`
threads_per_core=`lscpu|grep "^Thread(s) per core"|awk -F":" '{print $2}'`
cpus=$((cores/threads_per_core))

if [ $cpus -gt 1 ]; then
	cpus=$((cpus-1))
fi

input="$2"
ext=${input##*.}
output="${input%%.$ext}-h264.mp4"

# To list all supported codecs by ffmpeg: ffmpeg -codecs
# To change frame rate to 30 frames/sec: "-r 30"
# To scale the resolution to 1280x800: "-s 1280x800" 

ffmpeg -i "$input" -c:a copy -c:v libx264 -preset medium -crf "$quality" -threads $cpus "$output"
