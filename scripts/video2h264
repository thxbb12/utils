#!/bin/bash

if [ $# -ne 1 ]; then
	echo "Re-encode (using ffmpeg) a video file using the H264 codec."
	echo "Usage: video2h264 FILE"
	echo "The generated output file has the same name as the input,"
	echo "except that it is postfixed with \"-h264\""
	echo "It also converts the audio to 2 channels AAC."
	exit 1
fi

quality=24

# To avoid saturating the system, leave 1 physical CPU for other things
cores=`lscpu|grep "^CPU(s):"|awk -F":" '{print $2}'`
threads_per_core=`lscpu|grep "^Thread(s) per core"|awk -F":" '{print $2}'`
cpus=$((cores/threads_per_core))

if [ $cpus -gt 1 ]; then
	cpus=$((cpus-1))
fi

input="$1"
ext=${input##*.}
output="${input%%.$ext}-h264.$ext"

# To list all supported codecs by ffmpeg: ffmpeg -codecs
# To change frame rate to 30 frames/sec: "-r 30"
# To scale the resolution to 1920x1080: "-s 1920x1080" 
# To crop the video to a specific area: -vf "crop = 1280:545:0:88"

ffmpeg -i "$input" -c:a aac -ac 2 -map 0 -c copy -c:v libx264 -preset slow -crf $quality -profile:v high -level:v 4.1 -pix_fmt yuv420p -maxrate:v 14M -bufsize:v 28M -b:a 160k -movflags +faststart "$output"