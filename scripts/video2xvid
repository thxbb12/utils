#!/bin/bash

if [ $# -ne 1 ]; then
	echo "Re-encode (using ffmpeg) a video file using the XVID codec."
	echo "Usage: video2xvid FILE"
	echo "The generated output file has the same name as the input,"
	echo "except that it is postfixed with \"-xvid\""
	echo "It also converts the audio to 2-channel AAC."
	exit 1
fi

quality=4

# To avoid saturating the system, leave 1 physical CPU for other things
cores=`lscpu|grep "^CPU(s):"|awk -F":" '{print $2}'`
threads_per_core=`lscpu|grep "^Thread(s) per core"|awk -F":" '{print $2}'`
cpus=$((cores/threads_per_core))

if [ $cpus -gt 1 ]; then
	cpus=$((cpus-1))
fi

input="$1"
ext=${input##*.}
output="${input%%.$ext}-xvid.$ext"

# To list all supported codecs by ffmpeg: ffmpeg -codecs
# To change frame rate to 30 frames/sec: "-r 30"
# To scale the resolution to 1920x1080: "-s 1920x1080" 
# To crop the video to a specific area: -vf "crop = 1280:545:0:88"

ffmpeg -i "$input" -c:s copy -c:a aac -ac 2 -b:a 160k -c:v libxvid -qscale:v $quality -threads $cpus "$output"

